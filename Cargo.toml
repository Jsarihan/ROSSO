[package]
name = "thesis"
version = "0.1.0"
authors = ["John Sarihan <jsarihan@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[patch.crates-io]
zeroize = { path = 'zeroize' }

[dependencies]
wasm-bindgen = {version = "0.2.63", features = ["serde-serialize"] }
coconut_sig = { path = "coconut"}
serde = "1.0"
serde_derive = "1.0"
secret_sharing = "0.1.1"
serde_json = "1.0.0"
ps_sig = "0.2.0"
failure = "0.1.5"
rand = { version = "0.7", features = ["wasm-bindgen"] }


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.amcl_wrapper]
version = "0.2.3"
default-features = false
features = ["bls381"]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"


[features]
default = ["SignatureG2"]
SignatureG1 = []
SignatureG2 = []